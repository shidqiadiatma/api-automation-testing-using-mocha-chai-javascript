{
  "stats": {
    "suites": 2,
    "tests": 25,
    "passes": 25,
    "pending": 0,
    "failures": 0,
    "start": "2022-10-16T02:06:15.139Z",
    "end": "2022-10-16T02:06:30.738Z",
    "duration": 15599,
    "testsRegistered": 25,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c65752b9-fa2f-47fd-a227-01c594c0aea2",
      "title": "",
      "fullFile": "C:\\Test QA\\api-automation-testing-using-mocha-chai-javascript\\automation-api-login.js",
      "file": "\\automation-api-login.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a4446533-5193-4c93-9693-bc1faac7e337",
          "title": "POST /login",
          "fullFile": "C:\\Test QA\\api-automation-testing-using-mocha-chai-javascript\\automation-api-login.js",
          "file": "\\automation-api-login.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify Success Login with valid email and password",
              "fullTitle": "POST /login Verify Success Login with valid email and password",
              "timedOut": false,
              "duration": 1158,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// DESKRIPSI\n    const response = await request_url // INI BUAT NGARAH KE URL BARRU.PYTHONANYWHERE.COM\n      .post(\"/login\") // INI ENDPOINT SETELAH .COM\n      .send({ email: \"shidqi.ngetes@gmail.com\", password: \"QaGabut100persen\" }); // INI SESUAI BODY\n    const isi_data = response.body;\n    assert(response.body.status).to.eql('SUCCESS_LOGIN');\n    assert(response.body.message).to.eql('Anda Berhasil Login');\n    assert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
              "err": {},
              "uuid": "e7b5d8d6-52c8-4f84-9255-38b14f260fe7",
              "parentUUID": "a4446533-5193-4c93-9693-bc1faac7e337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with invalid email and valid password",
              "fullTitle": "POST /login Verify Failed Login with invalid email and valid password",
              "timedOut": false,
              "duration": 509,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request_url \n  .post(\"/login\")\n  .send({ email: \"shidqi.ngetes\", password: \"QaGabut100persen\" });\nconst isi_data = response.body;\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
              "err": {},
              "uuid": "0e8c1195-0762-42a4-80f6-253d2640221e",
              "parentUUID": "a4446533-5193-4c93-9693-bc1faac7e337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with random email and valid password",
              "fullTitle": "POST /login Verify Failed Login with random email and valid password",
              "timedOut": false,
              "duration": 567,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request_url \n  .post(\"/login\")\n  .send({ email: \"shidqi.asdajsdasdasd@bkabka.com\", password: \"QaGabut100persen\" });\nconst isi_data = response.body;\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
              "err": {},
              "uuid": "e4376c74-945f-4959-b880-1e9ac4402d76",
              "parentUUID": "a4446533-5193-4c93-9693-bc1faac7e337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with phone number and valid password",
              "fullTitle": "POST /login Verify Failed Login with phone number and valid password",
              "timedOut": false,
              "duration": 548,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request_url \n  .post(\"/login\")\n  .send({ email: \"088823772363\", password: \"QaGabut100persen\" });\nconst isi_data = response.body;\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
              "err": {},
              "uuid": "603903b5-9f54-480e-af37-e802145f773e",
              "parentUUID": "a4446533-5193-4c93-9693-bc1faac7e337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with username and valid password",
              "fullTitle": "POST /login Verify Failed Login with username and valid password",
              "timedOut": false,
              "duration": 554,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request_url \n  .post(\"/login\")\n  .send({ email: \"shidqiadiatma\", password: \"QaGabut100persen\" });\nconst isi_data = response.body;\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
              "err": {},
              "uuid": "a601ad3c-e0b9-48e0-a529-51fa81843a92",
              "parentUUID": "a4446533-5193-4c93-9693-bc1faac7e337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with empty email and valid password",
              "fullTitle": "POST /login Verify Failed Login with empty email and valid password",
              "timedOut": false,
              "duration": 599,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request_url \n  .post(\"/login\")\n  .send({ email: \"\", password: \"QaGabut100persen\" });\nconst isi_data = response.body;\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
              "err": {},
              "uuid": "465331af-980e-48fd-998a-2b6e55730258",
              "parentUUID": "a4446533-5193-4c93-9693-bc1faac7e337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with empty Body Only Dictionary",
              "fullTitle": "POST /login Verify Failed Login with empty Body Only Dictionary",
              "timedOut": false,
              "duration": 600,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request_url \n  .post(\"/login\")\n  .send({ });\n  assert(response.status).to.eql(500);",
              "err": {},
              "uuid": "bd82cb83-6aff-4185-9275-61650cce4ece",
              "parentUUID": "a4446533-5193-4c93-9693-bc1faac7e337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with empty email and empty password",
              "fullTitle": "POST /login Verify Failed Login with empty email and empty password",
              "timedOut": false,
              "duration": 701,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request_url \n  .post(\"/login\")\n  .send({ email: \"\", password: \"\" });\nconst isi_data = response.body;\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
              "err": {},
              "uuid": "aadfd184-6176-4424-9fc3-a30640a1abb0",
              "parentUUID": "a4446533-5193-4c93-9693-bc1faac7e337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with valid email and empty password",
              "fullTitle": "POST /login Verify Failed Login with valid email and empty password",
              "timedOut": false,
              "duration": 600,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request_url \n  .post(\"/login\")\n  .send({ email: \"shidqi.ngetes@gmail.com\", password: \"\" });\nconst isi_data = response.body;\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
              "err": {},
              "uuid": "3be70d5c-3a24-418c-a34b-b1b954b2ecb2",
              "parentUUID": "a4446533-5193-4c93-9693-bc1faac7e337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with SQLI in password",
              "fullTitle": "POST /login Verify Failed Login with SQLI in password",
              "timedOut": false,
              "duration": 604,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request_url\n  .post(\"/login\")\n  .send({ email: \"shidqi.ngetes@gmail.com\", \n          password: \"SELECT%count%(*)%FROM%Users%WHERE%Username='jebol'%or%1=1%--%'%AND%Password=%'email'\"});\nconst isi_data = response.body;\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(response.body.message).to.eql(\"Tidak boleh mengandung symbol\");\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
              "err": {},
              "uuid": "c180477b-068d-4381-8239-74c8930b3a7a",
              "parentUUID": "a4446533-5193-4c93-9693-bc1faac7e337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with SQLI in email",
              "fullTitle": "POST /login Verify Failed Login with SQLI in email",
              "timedOut": false,
              "duration": 496,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request_url\n  .post(\"/login\")\n  .send({ email: \"SELECT%count%(*)%FROM%Users%WHERE%Username='jebol'%or%1=1%--%'%AND%Password=%'email'\", \n          password: \"QaGabut100persen\"});\nconst isi_data = response.body;\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(response.body.message).to.eql(\"Cek kembali email anda\");\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
              "err": {},
              "uuid": "3246d391-598e-4efa-b01a-c84086ce1ea0",
              "parentUUID": "a4446533-5193-4c93-9693-bc1faac7e337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with Max Char in Email Field",
              "fullTitle": "POST /login Verify Failed Login with Max Char in Email Field",
              "timedOut": false,
              "duration": 598,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let max_email = Array.from(Array(55), () => Math.floor(Math.random() * 36).toString(36)).join('');\nconst response = await request_url\n.post(\"/login\") \n.send({ email: max_email + \"@gmail.com\", password: \"QaGabut100persen\" });\nconst isi_data = response.body;\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(response.body.data).to.eql('Email/Password melebihin maksimal karakter');\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
              "err": {},
              "uuid": "fff84814-7a35-4186-900f-0160314fb276",
              "parentUUID": "a4446533-5193-4c93-9693-bc1faac7e337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with Max Char in Password Field",
              "fullTitle": "POST /login Verify Failed Login with Max Char in Password Field",
              "timedOut": false,
              "duration": 507,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let max_password = Array.from(Array(55), () => Math.floor(Math.random() * 36).toString(36)).join('');\nconst response = await request_url\n.post(\"/login\") \n.send({ email: \"shidqi.ngetes@gmail.com\", password: max_password });\nconst isi_data = response.body;\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(response.body.data).to.eql('Email/Password melebihin maksimal karakter');\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
              "err": {},
              "uuid": "c47347b3-31aa-4957-b909-5f1f2d428de1",
              "parentUUID": "a4446533-5193-4c93-9693-bc1faac7e337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with Method GET",
              "fullTitle": "POST /login Verify Failed Login with Method GET",
              "timedOut": false,
              "duration": 592,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request_url\n.get(\"/login\") \n.send({ email: \"shidqi.ngetes@gmail.com\", password: \"QaGabut100persen\" });\nassert(response.status).to.eql(405);",
              "err": {},
              "uuid": "8920ee4e-4578-4d3a-bc79-8b2b8f5413c2",
              "parentUUID": "a4446533-5193-4c93-9693-bc1faac7e337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with Method PUT",
              "fullTitle": "POST /login Verify Failed Login with Method PUT",
              "timedOut": false,
              "duration": 601,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let random_text = Math.random().toString(36).substring(7);\nconst response = await request_url\n.put(\"/login\") \n.send({ email: \"shidqi.ngetes@gmail.com\", password: \"QaGabut100persen\" });\nassert(response.status).to.eql(405);",
              "err": {},
              "uuid": "93481061-bf7e-47a9-b01f-aeb4782180c4",
              "parentUUID": "a4446533-5193-4c93-9693-bc1faac7e337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with Method PATCH",
              "fullTitle": "POST /login Verify Failed Login with Method PATCH",
              "timedOut": false,
              "duration": 599,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let random_text = Math.random().toString(36).substring(7);\nconst response = await request_url\n.patch(\"/login\") \n.send({ email: \"shidqi.ngetes@gmail.com\", password: \"QaGabut100persen\" });\nassert(response.status).to.eql(405);",
              "err": {},
              "uuid": "d68a07e5-bd95-44f1-a307-eba35636c0aa",
              "parentUUID": "a4446533-5193-4c93-9693-bc1faac7e337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with Form-Data as Body",
              "fullTitle": "POST /login Verify Failed Login with Form-Data as Body",
              "timedOut": false,
              "duration": 1003,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let random_text = Math.random().toString(36).substring(7);\nconst response = await request_url\n  .post(\"/login\")\n  .type('form')\n  .send({ email: \"shidqi.ngetes@gmail.com\", password: \"QaGabut100persen\" });\nassert(response.status).to.eql(500);",
              "err": {},
              "uuid": "f4000641-e315-40d0-b934-d49c114fd748",
              "parentUUID": "a4446533-5193-4c93-9693-bc1faac7e337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with xx-www-form-urlencoded as Body",
              "fullTitle": "POST /login Verify Failed Login with xx-www-form-urlencoded as Body",
              "timedOut": false,
              "duration": 600,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let random_text = Math.random().toString(36).substring(7);\nconst response = await request_url\n  .post(\"/login\")\n  .set('content-Type', 'application/x-www-form-urlencoded')\n  .send({ email: 'shidqi.ngetes@gmail.com', password: 'QaGabut100persen' });\nassert(response.status).to.eql(500);",
              "err": {},
              "uuid": "2b0f4ea0-5e24-40a4-8289-733112857f9b",
              "parentUUID": "a4446533-5193-4c93-9693-bc1faac7e337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with Integer Type in Email",
              "fullTitle": "POST /login Verify Failed Login with Integer Type in Email",
              "timedOut": false,
              "duration": 510,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let random_text = Math.random().toString(36).substring(7);\nconst response = await request_url\n  .post(\"/login\")\n  .send({ email: 123456789, password: random_text});\nassert(response.status).to.eql(500);",
              "err": {},
              "uuid": "d0343edb-2736-44da-967a-7d8ca4bcc669",
              "parentUUID": "a4446533-5193-4c93-9693-bc1faac7e337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Failed Login with Integer Type in Password",
              "fullTitle": "POST /login Verify Failed Login with Integer Type in Password",
              "timedOut": false,
              "duration": 499,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let random_text = Math.random().toString(36).substring(7);\nconst response = await request_url\n  .post(\"/login\")\n  .send({ email: random_text + \"@gmail.com\", password: 123456789});\nassert(response.status).to.eql(500);",
              "err": {},
              "uuid": "a11233e0-70e6-4aea-9529-ad1ff79a6d43",
              "parentUUID": "a4446533-5193-4c93-9693-bc1faac7e337",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "f0dd5d13-cd90-4886-b305-b6e569d86094",
              "title": "Verify Max Login for User in 1 IP Address",
              "fullFile": "C:\\Test QA\\api-automation-testing-using-mocha-chai-javascript\\automation-api-login.js",
              "file": "\\automation-api-login.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Tes ke 0 Failed Login Max in 1 Session",
                  "fullTitle": "POST /login Verify Max Login for User in 1 IP Address Tes ke 0 Failed Login Max in 1 Session",
                  "timedOut": false,
                  "duration": 592,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await request_url\n  .post(\"/login\")\n  .send({ email: \"shidqi.ngetes@gmail.com\", password: \"QaGabut100persen\", ip_address: \"127.107.42.1\"});\nconst isi_data = response.body;\nif (nomer === 4) {\n  // console.log(\"Tes ke \" + nomer + \" failed login attemp\")\n  assert(response.body.status).to.eql('FAILED_LOGIN');\n  assert(response.body.data).to.eql('IP Address Anda diblokir');\n  assert(isi_data).to.include.keys(\"data\", \"message\", \"status\");\n}\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
                  "err": {},
                  "uuid": "fcd2da86-7116-49fe-8e2d-a8b07a5184f1",
                  "parentUUID": "f0dd5d13-cd90-4886-b305-b6e569d86094",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Tes ke 1 Failed Login Max in 1 Session",
                  "fullTitle": "POST /login Verify Max Login for User in 1 IP Address Tes ke 1 Failed Login Max in 1 Session",
                  "timedOut": false,
                  "duration": 599,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await request_url\n  .post(\"/login\")\n  .send({ email: \"shidqi.ngetes@gmail.com\", password: \"QaGabut100persen\", ip_address: \"127.107.42.1\"});\nconst isi_data = response.body;\nif (nomer === 4) {\n  // console.log(\"Tes ke \" + nomer + \" failed login attemp\")\n  assert(response.body.status).to.eql('FAILED_LOGIN');\n  assert(response.body.data).to.eql('IP Address Anda diblokir');\n  assert(isi_data).to.include.keys(\"data\", \"message\", \"status\");\n}\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
                  "err": {},
                  "uuid": "3191e5a6-c3e4-4087-986f-07faa3c99410",
                  "parentUUID": "f0dd5d13-cd90-4886-b305-b6e569d86094",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Tes ke 2 Failed Login Max in 1 Session",
                  "fullTitle": "POST /login Verify Max Login for User in 1 IP Address Tes ke 2 Failed Login Max in 1 Session",
                  "timedOut": false,
                  "duration": 601,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await request_url\n  .post(\"/login\")\n  .send({ email: \"shidqi.ngetes@gmail.com\", password: \"QaGabut100persen\", ip_address: \"127.107.42.1\"});\nconst isi_data = response.body;\nif (nomer === 4) {\n  // console.log(\"Tes ke \" + nomer + \" failed login attemp\")\n  assert(response.body.status).to.eql('FAILED_LOGIN');\n  assert(response.body.data).to.eql('IP Address Anda diblokir');\n  assert(isi_data).to.include.keys(\"data\", \"message\", \"status\");\n}\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
                  "err": {},
                  "uuid": "1442cd22-117a-4243-96db-b06edd9b6ee2",
                  "parentUUID": "f0dd5d13-cd90-4886-b305-b6e569d86094",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Tes ke 3 Failed Login Max in 1 Session",
                  "fullTitle": "POST /login Verify Max Login for User in 1 IP Address Tes ke 3 Failed Login Max in 1 Session",
                  "timedOut": false,
                  "duration": 499,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await request_url\n  .post(\"/login\")\n  .send({ email: \"shidqi.ngetes@gmail.com\", password: \"QaGabut100persen\", ip_address: \"127.107.42.1\"});\nconst isi_data = response.body;\nif (nomer === 4) {\n  // console.log(\"Tes ke \" + nomer + \" failed login attemp\")\n  assert(response.body.status).to.eql('FAILED_LOGIN');\n  assert(response.body.data).to.eql('IP Address Anda diblokir');\n  assert(isi_data).to.include.keys(\"data\", \"message\", \"status\");\n}\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
                  "err": {},
                  "uuid": "a378fd37-e982-4501-bf45-1f9fd633a4be",
                  "parentUUID": "f0dd5d13-cd90-4886-b305-b6e569d86094",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Tes ke 4 Failed Login Max in 1 Session",
                  "fullTitle": "POST /login Verify Max Login for User in 1 IP Address Tes ke 4 Failed Login Max in 1 Session",
                  "timedOut": false,
                  "duration": 803,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await request_url\n  .post(\"/login\")\n  .send({ email: \"shidqi.ngetes@gmail.com\", password: \"QaGabut100persen\", ip_address: \"127.107.42.1\"});\nconst isi_data = response.body;\nif (nomer === 4) {\n  // console.log(\"Tes ke \" + nomer + \" failed login attemp\")\n  assert(response.body.status).to.eql('FAILED_LOGIN');\n  assert(response.body.data).to.eql('IP Address Anda diblokir');\n  assert(isi_data).to.include.keys(\"data\", \"message\", \"status\");\n}\nassert(response.body.status).to.eql('FAILED_LOGIN');\nassert(isi_data).to.include.keys(\"data\", \"message\", \"status\");",
                  "err": {},
                  "uuid": "7f33c815-bf9c-4ce9-9b4f-7299b7bed40c",
                  "parentUUID": "f0dd5d13-cd90-4886-b305-b6e569d86094",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fcd2da86-7116-49fe-8e2d-a8b07a5184f1",
                "3191e5a6-c3e4-4087-986f-07faa3c99410",
                "1442cd22-117a-4243-96db-b06edd9b6ee2",
                "a378fd37-e982-4501-bf45-1f9fd633a4be",
                "7f33c815-bf9c-4ce9-9b4f-7299b7bed40c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3094,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "e7b5d8d6-52c8-4f84-9255-38b14f260fe7",
            "0e8c1195-0762-42a4-80f6-253d2640221e",
            "e4376c74-945f-4959-b880-1e9ac4402d76",
            "603903b5-9f54-480e-af37-e802145f773e",
            "a601ad3c-e0b9-48e0-a529-51fa81843a92",
            "465331af-980e-48fd-998a-2b6e55730258",
            "bd82cb83-6aff-4185-9275-61650cce4ece",
            "aadfd184-6176-4424-9fc3-a30640a1abb0",
            "3be70d5c-3a24-418c-a34b-b1b954b2ecb2",
            "c180477b-068d-4381-8239-74c8930b3a7a",
            "3246d391-598e-4efa-b01a-c84086ce1ea0",
            "fff84814-7a35-4186-900f-0160314fb276",
            "c47347b3-31aa-4957-b909-5f1f2d428de1",
            "8920ee4e-4578-4d3a-bc79-8b2b8f5413c2",
            "93481061-bf7e-47a9-b01f-aeb4782180c4",
            "d68a07e5-bd95-44f1-a307-eba35636c0aa",
            "f4000641-e315-40d0-b934-d49c114fd748",
            "2b0f4ea0-5e24-40a4-8289-733112857f9b",
            "d0343edb-2736-44da-967a-7d8ca4bcc669",
            "a11233e0-70e6-4aea-9529-ad1ff79a6d43"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12445,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "api-login-report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "Login",
        "reportFilename": "api-login-report"
      },
      "version": "6.2.0"
    }
  }
}